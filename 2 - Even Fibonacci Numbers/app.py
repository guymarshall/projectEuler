# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89,...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

def generate_fibonacci_numbers(maximum: int) -> list:
    fibonacci_numbers = []
    first, second = 1, 2
    while first < maximum:
        fibonacci_numbers.append(first)
        first, second = second, first + second

    return fibonacci_numbers


def main():
    fibonacci_numbers = generate_fibonacci_numbers(4_000_000)
    even_fibonacci_sum = sum(number for number in fibonacci_numbers if number % 2 == 0)
    print(even_fibonacci_sum)


if __name__ == '__main__':
    main()
